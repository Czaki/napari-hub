name: Push Remote Dev

on:
  push:
    branches:
      - 'dev-*'

env:
  # Force using BuildKit instead of normal Docker, required so that metadata
  # is written/read to allow us to use layers of previous builds as cache.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_REPO: ${{ secrets.ECR_REPO }}/

jobs:
  build-push-images:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        component: ['frontend', 'backend', 'upload_failures', 'processing']
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v2
      - name: Build component
        shell: bash
        run: |
          pip install -r .happy/requirements.txt
          scripts/happy --profile="" push --extra-tag sha-${GITHUB_SHA:0:8} --extra-tag build-${GITHUB_RUN_NUMBER} ${{ matrix.component }}

  create-update-dev:
    runs-on: ubuntu-20.04
    needs:
      - build-push-images
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - uses: actions/checkout@v2
      - name: Install happy dependencies
        run: |
          pip install -r .happy/requirements.txt
      - name: Create update dev
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          DEV_NAME=${GITHUB_REF#refs/heads/dev-}
          if $(./scripts/happy --profile="" list | grep -q $DEV_NAME); then
            echo "Updating stack $DEV_NAME"
            ./scripts/happy --profile=""  update --tag build-${GITHUB_RUN_NUMBER} $DEV_NAME
          else
            echo "Creating stack $DEV_NAME"
            ./scripts/happy --profile="" create  --tag build-${GITHUB_RUN_NUMBER} $DEV_NAME
          fi
